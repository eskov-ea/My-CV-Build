extends layout/header.pug

block variables 
    - let titleName = "My projects"
    - let cssLink = "css/myprojects.min.css"
    - let active = "myprojects.html"

mixin project(classname, name, text, last)
    if(last)
        div(class="item item_unfinished")
        button(class="btn btn-warning container-fluid" type="button" data-bs-toggle="collapse"
        data-bs-target="#"+classname aria-expanded="false" aria-controls="#"+classname)= name
    else
        div(class="item")
        button(class="btn btn-secondary container-fluid item__btn" type="button" data-bs-toggle="collapse"
            data-bs-target="#"+classname aria-expanded="false" aria-controls="#"+classname)= name
    div(class="collapse" id=classname data-bs-parent="#selector")
        div(class="card card-body")
            p !{text}


block content
    - let todosText = "Todos App is a simple web application created with ReactJS. It uses React <b> createContext, useContext, useState </b> hooks to create and manage store. To make it works I used <a target='__blank' href='https://documenter.getpostman.com/view/8858534/SW7dX7JG#intro'> Todo List API </a> to get endpoints to get/create information. To start using this sourse you will need to fill out the form to create an account, the form validates via email, password fields. Then you can sign in and create your own Todo List. You can write title of todo, initially it has incomplete status, you can see it by red circle. Then there is an 'Edit' button, once you clicked it you get into manage state of the todo and change the information: description, complete status or you may delete the todo. <br> <b> You can learn the sourse code via </b> <a target='_blank' href='https://github.com/eskov-ea/React-Todos-App'>Todos App</a><br> React Todos App is also published on GH Pages. You can run it via <a target='_blank' href='https://eskov-ea.github.io/React-Todos-App/'>React Todos App</a> <br> <b>Note!</b>Please read the <a target='_blank' href='https://github.com/eskov-ea/React-Todos-App/blob/main/README.md'> README </a> first"
    - let pageMaking = "As part of a project I completed a page making project due to design. <br>I used Gulp to prepare my \"production\" files, Pug template to create HTML structure and SASS for CSS styles and used include functionality to divide big block into small reusable ones.<br> To follow the design I used Avocode (free trial).<br>As the result you can see a website which is adaptive and tested with Goggle, Safary, IE (latest versions*).<br><b>It has mobile adaptation.</b><br>The project is <a target='_blank' href='https://eskov-ea.github.io/page_making_Luxtrader/'>Luxtrade website</a>.<br><b>You can get acquainted the design via</b> <a target='_blank' href='https://disk.yandex.ru/d/yqSAWpSaLfbzcg'>this link</a>"
    - let CVText = "The CV project is a digital CV page created with PUG/SCSS and Bootstrap technologies and built with Gulp. It is a simple three page application to help me introduce myself. To avoid the hosting it I decide to use GitHub Pages to provide access to the CV on the Internet. During the workflow I used mixin to create <b>\"Todos App, CV, JS Calculator, Unfinished\"</b> file partions; I used Pug's extends to provide each file with navbar partian.<br> <b>You may see the sourse code via</b> <a target='_blank' href='https://github.com/eskov-ea/My-CV-Build'>my CV on GitHub</a>"
    - let contactsApp = "Contact List App is the result of the test, all the reqiered information is available within README file (in Russian). The application was created with React, using react-hooks to control the state. The app uses json-server as mock-backend to create, read, update, delete data.<br> This app is not hosted so you can run it by loading the source file, initialize all the dependencies with 'npm i' and run json-server and react app.<br> <b>The source code and the instructions are <a target='_blank' href='https://github.com/eskov-ea/contacts_test' >here</a>.</b>"
    - let jsCalcText = "It is like a regular calculator. The interface of the calculator built by CSS Grid. It can help you to summ, multiply, divide or minus integer numbers. It is able to work with prioritys. <br> <b>Sourse to the code is</b> <a target='_blank' href='https://github.com/eskov-ea/Simple-JS-Calculator'>JavaScript Calculator</a>"
    - let unfinishedText = "I would like to add a bit of my current working flow: <br> These days I work with NodeJS connecting to database, creating or getting data from db, read/ write files to manage a strong build in this field. <br> I work with algorithms and data struchers implemented in JavaScript. I have a profile on <a target='_blank' href='https://www.codewars.com/users/ea.eskov'>Codewars</a> to solve code challenges."

    div(class="container content" id="selector")
        div(class="content_description")
            p There are a few projects I did to learn each technology:
        +project("todos", "Todos APP", todosText)
        +project("pageMaking", "Page making (верстка)", pageMaking)
        +project("contactsApp", "Contact List App", contactsApp)
        +project("myCv", "CV", CVText)
        +project("jsCalc", "JavaScript Calculator", jsCalcText)
        +project("unfinished", "Unfinished projects", unfinishedText, true)

    
